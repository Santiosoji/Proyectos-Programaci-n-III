% Ejercicio de verificar si es posible viajar de Vancouver a Winniepeg en un Grafo.

% Creamos los hechos que nos permiten saber las conexiones directas entre nodos y el costo del viaje.
conexion(vancouver, edmonton, 16).
conexion(vancouver, calgary, 13).
conexion(edmonton, saskatoon, 12).
conexion(calgary, edmonton, 4).
conexion(calgary, regina, 14).
conexion(saskatoon, calgary, 9).
conexion(saskatoon, winnipeg, 20).
conexion(regina, saskatoon, 7).
conexion(regina, winnipeg, 4).

% Creamos una regla que me permite saber si hay una conexion directa entre nodos.
conexion_directa_con(Esta_cuidad_tiene, Esta_cuidad) :- conexion(Esta_cuidad_tiene, Esta_cuidad, _).

% Creamos otra regla que me permite de forma recursiva, imprimir mediante format las conexiones que tiene una ciudad con otras ciudades.
conexion_con_costo(Ciudad) :- conexion(Ciudad, Destino, Costo), format('~w -> ~w (Costo: ~w)~n', [Ciudad, Destino, Costo]), fail.

% Creamos una regla para determinar si un nodo tiene aristas.
tiene_aristas(Nodo) :- conexion(Nodo, _, _).

% Creamos una regla para calcular el costo de ir de X a Z pasando por Y.
costo_ruta(X, Y, Z, CostoTotal) :- conexion(X, Y, Costo1), conexion(Y, Z, Costo2), CostoTotal is Costo1 + Costo2.

% Por ultimo creamos una regla para verificar si es posible viajar desde Ddmonton a Calgary.
es_posible_viajar(X, Y) :- conexion(X, Y, _).
es_posible_viajar(A, B) :- conexion(A, C, _), es_posible_viajar(C, B).
